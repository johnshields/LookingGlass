openapi: 3.0.0
info:
  title: Looking Glass API
  version: 1.0.2
servers:
  - url: /
paths:
  /api/logs:
    get:
      operationId: logs_get
      summary: Get all logs
      x-openapi-router-controller: app.openapi_server.controllers.log_controller
      responses:
        "200":
          description: List of daily logs
    post:
      operationId: logs_post
      summary: Create a new daily log
      x-openapi-router-controller: app.openapi_server.controllers.log_controller
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DailyLog"
      responses:
        "201":
          description: Log created

  /api/logs/{id}:
    get:
      operationId: logs_id_get
      summary: Get log by ID
      x-openapi-router-controller: app.openapi_server.controllers.log_controller
      parameters:
        - in: path
          name: id
          required: true
          explode: false
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Log found
        "404":
          description: Not found

    put:
      operationId: logs_id_put
      summary: Update log by ID
      x-openapi-router-controller: app.openapi_server.controllers.log_controller
      parameters:
        - in: path
          name: id
          required: true
          explode: false
          style: simple
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLog"
      responses:
        "204":
          description: Log updated
        "400":
          description: Invalid UUID
        "404":
          description: Log not found

    delete:
      operationId: logs_id_delete
      summary: Delete log by ID
      x-openapi-router-controller: app.openapi_server.controllers.log_controller
      parameters:
        - in: path
          name: id
          required: true
          explode: false
          style: simple
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Log deleted
        "400":
          description: Invalid UUID
        "404":
          description: Log not found

components:
  schemas:
    DailyLog:
      title: DailyLog
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
        entries:
          type: string
        log_date:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
        mood:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      example:
        id: "c4a3b180-4569-4b2f-abc2-b84c90a680aa"
        title: "Monday"
        entries: "• Wrote FastAPI router\n• Cleaned controllers"
        log_date: "2025-07-08"
        tags: [ "work", "api", "python" ]
        mood: "productive"
        created_at: "2025-07-08T08:00:00Z"
        updated_at: "2025-07-08T08:30:00Z"

    UpdateLog:
      title: UpdateLog
      type: object
      properties:
        title:
          type: string
        entries:
          type: string
        log_date:
          type: string
          format: date
        tags:
          type: array
          items:
            type: string
        mood:
          type: string
